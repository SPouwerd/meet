version: "3"

services:

  traefik:
    image: traefik:v2.3
    command: --api.insecure=true --providers.docker
    ports: ["80:80"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  database:
    image: postgres:15-alpine
    ports: [5432:5432]
    environment:
      POSTGRES_DB: meet
      POSTGRES_USER: meet
      POSTGRES_PASSWORD: meet
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /volume/pgdata
    volumes:
      - database:/volume

  api:
    image: node:16
    working_dir: /usr/src/app
    command: yarn dev
    ports: [3000:3000] # this exposes api to public
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://meet:meet@database:5432/meet?schema=public&connect_timeout=300
      JWT_SECRET_KEY: cookies-and-creams
    labels:
      traefik.http.routers.api.rule: PathPrefix(`/api`)
      traefik.http.services.api.loadbalancer.server.port: 3000
    depends_on:
      - "database"
    volumes:
      - ./api:/usr/src/app

  web:
    image: node:16
    working_dir: /usr/src/app
    command: yarn dev
    ports: [3001:3001]
    environment:
      HOST: 0.0.0.0
      PORT: 3001
      BACKEND_URL: 'http://api:3000'
    labels:
      traefik.http.routers.web.rule: PathPrefix(`/`)
      traefik.http.services.web.loadbalancer.server.port: 3001
    volumes:
      - ./web:/usr/src/app

volumes:
  database: {}
